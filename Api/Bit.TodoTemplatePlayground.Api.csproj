<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <!-- For razor light cshtml files -->
        <MvcRazorExcludeRefAssembliesFromPublish>false</MvcRazorExcludeRefAssembliesFromPublish>
        <PreserveCompilationReferences>true</PreserveCompilationReferences>
        <PreserveCompilationContext>true</PreserveCompilationContext>
        <UserSecretsId>5e0edcd4-0815-453a-8d24-4b39856d2ca0</UserSecretsId>
        <!-- For razor light cshtml files -->
		<BlazorMode>BlazorWebAssembly</BlazorMode>
		<!-- You can use either BlazorServer or BlazorWebAssembly or BlazorHybrid -->
		<WebAppDeploymentType>DefaultDeploymentType</WebAppDeploymentType>
		<!-- You can choose either Static, DefaultDeploymentType, PWA or SSR -->
		<!-- Learn more about blazor modes & deployment types at https://bitplatform.dev/project-templates/todo-template/getting-started#blazor-modes -->
		<DefineConstants Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' ">$(DefineConstants);BlazorWebAssembly</DefineConstants>
		<DefineConstants Condition=" '$(BlazorMode)' == 'BlazorServer' ">$(DefineConstants);BlazorServer</DefineConstants>
		<DefineConstants Condition=" '$(BlazorMode)' == 'BlazorHybrid' ">$(DefineConstants);BlazorHybrid</DefineConstants>
		<DefineConstants Condition=" '$(WebAppDeploymentType)' == 'DefaultDeploymentType' ">$(DefineConstants);DefaultDeploymentType</DefineConstants>
		<DefineConstants Condition=" '$(WebAppDeploymentType)' == 'PWA' ">$(DefineConstants);PWA</DefineConstants>
		<DefineConstants Condition=" '$(WebAppDeploymentType)' == 'SSR' ">$(DefineConstants);SSR</DefineConstants>
		<DefineConstants Condition=" '$(WebAppDeploymentType)' == 'Static' ">$(DefineConstants);Static</DefineConstants>
		<DefineConstants Condition=" '$(TargetFramework)' == 'net6.0-android' ">$(DefineConstants);Android</DefineConstants>
		<DefineConstants Condition=" '$(TargetFramework)' == 'net6.0-ios' ">$(DefineConstants);iOS</DefineConstants>
		<DefineConstants Condition=" '$(TargetFramework)' == 'net6.0-windows10.0.19041' ">$(DefineConstants);Windows</DefineConstants>
		<DefineConstants Condition=" '$(TargetFramework)' == 'net6.0-maccatalyst' ">$(DefineConstants);Mac</DefineConstants>
		<LangVersion>preview</LangVersion>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <ItemGroup>
                <!-- In the Blazor Web Assembly mode, the API project will host the web client app itself -->
        <Content Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="..\Web\Pages\_Host.cshtml" Link="Pages\_Host.cshtml" />
        <Content Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="..\Web\Pages\_Layout.cshtml" Link="Pages\_Layout.cshtml" />
        <Compile Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="..\Web\Services\Implementations\ServerSideAuthTokenProvider.cs" Link="Services\Implementations\ServerSideAuthTokenProvider.cs" />
        <PackageReference Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="Microsoft.AspNetCore.Components.WebAssembly.Server" Version="6.0.6" />
        <ProjectReference Include="..\Web\Bit.TodoTemplatePlayground.Web.csproj" />
        
        <EmbeddedResource Include="Resources\*.cshtml" />
        <PackageReference Include="AutoMapper" Version="11.0.1" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
        <PackageReference Include="Bit.CodeAnalyzers" Version="1.0.2" />
        <PackageReference Include="Bit.SourceGenerators" Version="1.0.2" />
        <PackageReference Include="FluentEmail.Razor" Version="3.0.2" />
        <PackageReference Include="FluentEmail.Smtp" Version="3.0.2" />

        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.6" />


        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="6.0.6" />
        <PackageReference Include="Microsoft.AspNetCore.OData" Version="8.0.10" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.6">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="6.0.6" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.6">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="6.0.6" />
        <PackageReference Include="MimeTypeMapOfficial" Version="1.0.17" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.3.1" />
        <PackageReference Include="AspNetCore.HealthChecks.System" Version="6.0.5" />
        <PackageReference Include="AspNetCore.HealthChecks.UI" Version="6.0.4" />
        <PackageReference Include="AspNetCore.HealthChecks.UI.Client" Version="6.0.4" />
        <PackageReference Include="AspNetCore.HealthChecks.UI.InMemory.Storage" Version="6.0.4" />
        <PackageReference Include="AspNetCore.HealthChecks.Network" Version="6.0.3" />
    </ItemGroup>

    <ItemGroup>
        <Using Include="AutoMapper" />
        <Using Include="AutoMapper.QueryableExtensions" />
        <Using Include="Microsoft.AspNetCore.Mvc" />
        <Using Include="Microsoft.EntityFrameworkCore" />
        <Using Include="Bit.TodoTemplatePlayground.Api.Data" />
        <Using Include="Microsoft.EntityFrameworkCore.Metadata.Builders" />
        <Using Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" />
        <Using Include="Microsoft.AspNetCore.Identity" />
        <Using Include="Microsoft.EntityFrameworkCore.Migrations" />
        <Using Include="Microsoft.Extensions.Options" />
        <Using Include="Bit.TodoTemplatePlayground.Api.Data" />
        <Using Include="Bit.TodoTemplatePlayground.Shared.Enums" />
        <Using Include="Bit.TodoTemplatePlayground.Api.Services.Contracts" />
        <Using Include="Microsoft.AspNetCore.Authorization" />
        <Using Include="Microsoft.AspNetCore.OData.Query" />
		<Using Include="Microsoft.Extensions.DependencyInjection" />
		<Using Include="System.Net.Http" />
		<Using Include="System.Resources" />
		<Using Include="System.ComponentModel.DataAnnotations" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Services.Contracts" />
		<Using Include="System.Security.Claims" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Enums" />
		<Using Include="Bit.TodoTemplatePlayground" />
		<Using Include="System.ComponentModel.DataAnnotations.Schema" />
		<Using Include="System.Text.Json.Serialization" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Dtos" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Exceptions" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Resources" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Shared\Bit.TodoTemplatePlayground.Shared.csproj" />
    </ItemGroup>

    <ItemGroup>
        <Compile Update="**\*.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>$([System.String]::Copy('%(Filename)').Replace('.Designer','')).resx</DependentUpon>
        </Compile>
        <EmbeddedResource Update="**\*.resx">
            <Generator>PublicResXFileCodeGenerator</Generator>
            <LastGenOutput>%(Filename).Designer.cs</LastGenOutput>
        </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
        <None Update="IdentityCertificate.pfx">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
    </ItemGroup>

</Project>
