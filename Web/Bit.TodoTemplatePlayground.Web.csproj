<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<!--If you don't need to use the time zone and your app is in WASM format, you can reduce the output size of the app by disabling the time zone.-->
		<BlazorEnableTimeZoneSupport>true</BlazorEnableTimeZoneSupport>
		<BlazorWebAssemblyPreserveCollationData>false</BlazorWebAssemblyPreserveCollationData>
		<InvariantGlobalization>true</InvariantGlobalization>
		<RootNamespace>Bit.TodoTemplatePlayground.App</RootNamespace>
		<AssemblyName>Bit.TodoTemplatePlayground.App</AssemblyName>
		<ServiceWorkerAssetsManifest Condition="'$(WebAppDeploymentType)' == 'PWA'">service-worker-assets.js</ServiceWorkerAssetsManifest>
		<BlazorCacheBootResources Condition="'$(WebAppDeploymentType)' == 'PWA'">false</BlazorCacheBootResources>
		<BlazorMode>BlazorWebAssembly</BlazorMode>
		<!-- You can use either BlazorServer or BlazorWebAssembly or BlazorHybrid -->
		<WebAppDeploymentType>DefaultDeploymentType</WebAppDeploymentType>
		<!-- You can choose either Static, DefaultDeploymentType, PWA or SSR -->
		<!-- Learn more about blazor modes & deployment types at https://bitplatform.dev/project-templates/todo-template/getting-started#blazor-modes -->
		<DefineConstants Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' ">$(DefineConstants);BlazorWebAssembly</DefineConstants>
		<DefineConstants Condition=" '$(BlazorMode)' == 'BlazorServer' ">$(DefineConstants);BlazorServer</DefineConstants>
		<DefineConstants Condition=" '$(BlazorMode)' == 'BlazorHybrid' ">$(DefineConstants);BlazorHybrid</DefineConstants>
		<DefineConstants Condition=" '$(WebAppDeploymentType)' == 'DefaultDeploymentType' ">$(DefineConstants);DefaultDeploymentType</DefineConstants>
		<DefineConstants Condition=" '$(WebAppDeploymentType)' == 'PWA' ">$(DefineConstants);PWA</DefineConstants>
		<DefineConstants Condition=" '$(WebAppDeploymentType)' == 'SSR' ">$(DefineConstants);SSR</DefineConstants>
		<DefineConstants Condition=" '$(WebAppDeploymentType)' == 'Static' ">$(DefineConstants);Static</DefineConstants>
		<DefineConstants Condition=" '$(TargetFramework)' == 'net6.0-android' ">$(DefineConstants);Android</DefineConstants>
		<DefineConstants Condition=" '$(TargetFramework)' == 'net6.0-ios' ">$(DefineConstants);iOS</DefineConstants>
		<DefineConstants Condition=" '$(TargetFramework)' == 'net6.0-windows10.0.19041' ">$(DefineConstants);Windows</DefineConstants>
		<DefineConstants Condition=" '$(TargetFramework)' == 'net6.0-maccatalyst' ">$(DefineConstants);Mac</DefineConstants>
		<LangVersion>preview</LangVersion>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
	</PropertyGroup>

	<ItemGroup>
		<!-- In the Blazor Web Assembly mode, the API project will host the web client app itself -->
		<Content Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Remove="appsettings.json" />
		<Content Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Remove="Pages\_Host.cshtml" />
		<Content Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Remove="Pages\_Layout.cshtml" />
		<Compile Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Remove="Services\Implementations\ServerSideAuthTokenProvider.cs" />
		<Content Remove="compilerconfig.json" />
		<None Include="compilerconfig.json" />
	</ItemGroup>

	<ItemGroup>
		<Using Include="Microsoft.Extensions.DependencyInjection" />
		<Using Include="System.Net.Http" />
		<Using Include="System.Resources" />
		<Using Include="System.ComponentModel.DataAnnotations" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Services.Contracts" />
		<Using Include="System.Security.Claims" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Enums" />
		<Using Include="Bit.TodoTemplatePlayground" />
		<Using Include="System.ComponentModel.DataAnnotations.Schema" />
		<Using Include="System.Text.Json.Serialization" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Dtos" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Exceptions" />
		<Using Include="Bit.TodoTemplatePlayground.Shared.Resources" />
		<PackageReference Include="Bit.BlazorUI" Version="1.0.2" />
		<PackageReference Include="Bit.Bswup" Version="1.0.2" />
		<PackageReference Include="Bit.CodeAnalyzers" Version="1.0.2" />
		<PackageReference Include="Bit.SourceGenerators" Version="1.0.2" />
		<PackageReference Include="jose-jwt" Version="4.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Authorization" Version="6.0.6" />
		<PackageReference Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="Microsoft.AspNetCore.Components.WebAssembly" Version="6.0.6" />
		<PackageReference Condition=" '$(BlazorMode)' == 'BlazorWebAssembly' " Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="6.0.6" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup>
		<ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.min.js" Condition="'$(WebAppDeploymentType)' == 'PWA'" />
		<PackageReference Include="BuildWebCompiler2022" Version="1.14.8">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.7.4">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<ProjectReference Include="..\Shared\Bit.TodoTemplatePlayground.Shared.csproj" />

		<Using Include="Microsoft.AspNetCore.Components" />
		<Using Include="Bit.TodoTemplatePlayground.App.Services.Contracts" />
		<Using Include="Bit.TodoTemplatePlayground.App.Services.Implementations" />
		<Using Include="Microsoft.Extensions.Configuration" />
		<Using Include="Microsoft.JSInterop" />
		<Using Include="System.Net.Http.Json" />
		<Using Include="System.Collections.Concurrent" />
		<Using Include="Microsoft.AspNetCore.Components.Authorization" />
		<Using Include="Bit.TodoTemplatePlayground.App.Components" />
		<Using Include="Bit.BlazorUI" />
	</ItemGroup>

</Project>
